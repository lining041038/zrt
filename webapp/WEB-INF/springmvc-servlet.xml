<?xml version="1.0" encoding="UTF-8"?>   
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"  
   xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd"  default-lazy-init="false">   
      
    <context:annotation-config />
	<context:component-scan base-package="antelope" />
	<context:component-scan base-package="cn.timewalking" />
	<context:component-scan base-package="test" />
    
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >  
        <property name="persistenceUnitName" value="persistenceUnit" />
        <property name="persistenceXmlLocation" value="classpath:persistence.xml" />
    </bean>
    
    <!-- 统一异常处理 -->
	<bean id="myHandlerExceptionResolver" class="antelope.springmvc.MyHandlerExceptionResolver"/> 
    
    <bean   
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" /> <!--   -->
        
  	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
    <!-- 在不使用用户可配置的计划任务的项目当中不需要开启quartz项 -->
    <bean name="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource" ref ="datasourceforquartz" />
        <property name="transactionManager" ref="txManager"/>
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="configLocation" value="classpath:quartz.properties"/>
    </bean>
    <!--JNDI 同一个数据源，同一事务管理  --> 
    <bean id="datasourceforquartz" class="antelope.db.JndiBeanForSchedule"/>
	<tx:advice id="txAdvice" transaction-manager="txManager"> 
		<tx:attributes>
			<!-- 其它方法为只读事务 -->
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="search*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="list*" propagation="SUPPORTS" read-only="true" />
			<!-- 所有可写的方法都加入事务管理 -->
			<tx:method name="*" propagation="REQUIRES_NEW" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* antelope.*.service.*Manager.*(..))" advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(* antelope..*Controller.*(..))" advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(* cn.*..*.service.*Manager.*(..))" advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(* cn.*..*.*Controller.*(..))" advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(* cn.*..*.*Action.*(..))" advice-ref="txAdvice"/>
	</aop:config>
	 <!-- 配置事务管理器 -->  
	 <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">  
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
	<tx:annotation-driven transaction-manager="txManager"/>
	<task:annotation-driven/>
	
	<!-- activiti 流程引擎配置 begin-->
	
	<bean id="processEngineConfiguration" class="antelope.workflow.SpringProcessEngineConfiguration" >
	  	<property name="transactionManager" ref="txManager" />
	  	<property name="dataSource" ref="datasourceforquartz" />
	  	<property name="databaseSchemaUpdate" value="false" />
	  	<property name="jobExecutorActivate" value="true" />
	  	<property name="deploymentResources" value="classpath*:/bpmns/*.bpmn" /> 
	  	<property name="history" value="full" />
	  	<!-- 
	    <property name="customFormTypes">
	      <list>
	        <ref bean="userFormType"/>
	      </list>
	    </property>  -->
	  </bean>
	  <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean" destroy-method="destroy">
	  	<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	  </bean>
	  <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	  <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	  <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
	  <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	  <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
	  <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />
	  <bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
	  <!-- activiti 流程引擎配置 end-->
</beans>  
